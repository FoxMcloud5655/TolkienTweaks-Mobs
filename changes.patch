diff --git a/src/main/java/com/greatorator/tolkienmobs/init/BlockInit.java b/src/main/java/com/greatorator/tolkienmobs/init/BlockInit.java
index 939ef7a..e288e07 100644
--- a/src/main/java/com/greatorator/tolkienmobs/init/BlockInit.java
+++ b/src/main/java/com/greatorator/tolkienmobs/init/BlockInit.java
@@ -12,8 +12,5 @@ public class BlockInit {
     public static final List<Block> BLOCKS = new ArrayList<Block>();
 
     public static final Block BLOCK_DAEMONIUM = new BlockBase("block_daemonium", Material.IRON);
-
-    public static final Block ORE_END = new BlockOres("ore_end", "end");
-    public static final Block ORE_OVERWORLD = new BlockOres("ore_overworld", "overworld");
-    public static final Block ORE_NETHER = new BlockOres("ore_nether", "nether");
+    public static final Block ORE = new BlockOres("ore");
 }
diff --git a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockBase.java b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockBase.java
index 45e6314..9729fbe 100644
--- a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockBase.java
+++ b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockBase.java
@@ -3,18 +3,44 @@ package com.greatorator.tolkienmobs.objects.blocks;
 import com.greatorator.tolkienmobs.TolkienMobs;
 import com.greatorator.tolkienmobs.init.BlockInit;
 import com.greatorator.tolkienmobs.init.ItemInit;
-import com.greatorator.tolkienmobs.util.Reference;
+import com.greatorator.tolkienmobs.objects.blocks.item.ItemBlockBase;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
-import net.minecraft.item.ItemBlock;
+import net.minecraft.item.Item;
+
+import java.util.HashMap;
+import java.util.Map;
 
 public class BlockBase extends Block {
+
+    public Map<Integer, String> nameOverrides = new HashMap<>();
+
+    public BlockBase(String name) {
+        this(name, Material.ROCK);
+    }
+
+    @SuppressWarnings("ConstantConditions")
     public BlockBase(String name, Material material) {
         super(material);
-        setUnlocalizedName(Reference.MODID + ":" + name);
+        this.setHardness(1.5F);   //Set default values that can be overridden if needed
+        this.setResistance(10F);
+
         setRegistryName(name);
         setCreativeTab(TolkienMobs.TTMOBS);
+
         BlockInit.BLOCKS.add(this);
-        ItemInit.ITEMS.add(new ItemBlock(this).setRegistryName(this.getRegistryName()));
+        ItemInit.ITEMS.add(new ItemBlockBase(this).setRegistryName(this.getRegistryName()));
+    }
+
+    /**
+     * Adds a name mapping for the given metadata.
+     * The overridden unlocalized name will be as follows.<br>
+     * tile.[modid]:[nameAddedByThisMethod].name<br>
+     * This also sets hasSubTypes to true.
+     */
+    public BlockBase addName(int meta, String name) {
+        nameOverrides.put(meta, name);
+        Item.getItemFromBlock(this).setHasSubtypes(true);
+        return this;
     }
 }
\ No newline at end of file
diff --git a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockOres.java b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockOres.java
index 446d4d6..19031eb 100644
--- a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockOres.java
+++ b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/BlockOres.java
@@ -1,100 +1,128 @@
 package com.greatorator.tolkienmobs.objects.blocks;
 
 import com.greatorator.tolkienmobs.TolkienMobs;
-import com.greatorator.tolkienmobs.init.BlockInit;
-import com.greatorator.tolkienmobs.init.ItemInit;
-import com.greatorator.tolkienmobs.objects.blocks.item.ItemBlockVariants;
-import com.greatorator.tolkienmobs.util.Reference;
-import com.greatorator.tolkienmobs.util.handlers.EnumHandler;
 import com.greatorator.tolkienmobs.util.interfaces.IHasModel;
-import com.greatorator.tolkienmobs.util.interfaces.IMetaName;
-import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
-import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockStateContainer;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
+import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
+import net.minecraft.util.IStringSerializable;
 import net.minecraft.util.NonNullList;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.world.World;
 
-public class BlockOres extends Block implements IHasModel, IMetaName
-{
-    public static final PropertyEnum<EnumHandler.EnumType> VARIANT = PropertyEnum.<EnumHandler.EnumType>create("variant", EnumHandler.EnumType.class);
+public class BlockOres extends BlockBase implements IHasModel {
+    public static final PropertyEnum<EnumType> ORE_TYPE = PropertyEnum.create("type", EnumType.class);
 
-    private String name, dimension;
+    public BlockOres(String name) {
+        super(name, Material.ROCK);
+        this.setHarvestLevel("pickaxe", 1);
+        setDefaultState(this.blockState.getBaseState().withProperty(ORE_TYPE, EnumType.DAEMONIUM));
 
-    public BlockOres(String name, String dimension)
-    {
-        super(Material.ROCK);
-        setUnlocalizedName(Reference.MODID + ":" + name);
-        setRegistryName(name);
-        setCreativeTab(TolkienMobs.TTMOBS);
-        setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, EnumHandler.EnumType.DAEMONIUM));
-
-        this.name = name;
-        this.dimension = dimension;
+        //Thanks to BlockBase this is all you have to do to add sub types
+        for (EnumType type : EnumType.values()) {
+            addName(type.meta, "ore_" + type.name);
+        }
+    }
 
-        BlockInit.BLOCKS.add(this);
-        ItemInit.ITEMS.add(new ItemBlockVariants(this).setRegistryName(this.getRegistryName()));
+    @Override
+    public void getSubBlocks(CreativeTabs tab, NonNullList<ItemStack> list) {
+        for (EnumType enumType : EnumType.values()) {
+            list.add(new ItemStack(this, 1, enumType.getMeta()));
+        }
     }
 
+    //region BlockState
     @Override
-    public int damageDropped(IBlockState state)
-    {
-        return ((EnumHandler.EnumType)state.getValue(VARIANT)).getMeta();
+    protected BlockStateContainer createBlockState() {
+        return new BlockStateContainer(this, ORE_TYPE);
     }
 
     @Override
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((EnumHandler.EnumType)state.getValue(VARIANT)).getMeta();
+    public int getMetaFromState(IBlockState state) {
+        return state.getValue(ORE_TYPE).getMeta();
     }
 
     @Override
-    public IBlockState getStateFromMeta(int meta)
-    {
-        return this.getDefaultState().withProperty(VARIANT, EnumHandler.EnumType.byMetadata(meta));
+    public IBlockState getStateFromMeta(int meta) {
+        return getDefaultState().withProperty(ORE_TYPE, EnumType.byMetadata(meta));
     }
 
     @Override
-    public ItemStack getPickBlock(IBlockState state, RayTraceResult target, World world, BlockPos pos, EntityPlayer player)
-    {
-        return new ItemStack(Item.getItemFromBlock(this), 1, getMetaFromState(world.getBlockState(pos)));
+    public void onBlockPlacedBy(World world, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack) {
+        world.setBlockState(pos, state.withProperty(ORE_TYPE, EnumType.byMetadata(stack.getItemDamage())));
     }
 
     @Override
-    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
-    {
-        for(EnumHandler.EnumType variant : EnumHandler.EnumType.values())
-        {
-            items.add(new ItemStack(this, 1, variant.getMeta()));
-        }
+    public ItemStack getPickBlock(IBlockState state, RayTraceResult target, World world, BlockPos pos, EntityPlayer player) {
+        return new ItemStack(this, 1, world.getBlockState(pos).getValue(ORE_TYPE).getMeta());
     }
 
     @Override
-    protected BlockStateContainer createBlockState()
-    {
-        return new BlockStateContainer(this, new IProperty[] {VARIANT});
+    public ItemStack getItem(World world, BlockPos pos, IBlockState state) {
+        return new ItemStack(this, 1, world.getBlockState(pos).getValue(ORE_TYPE).getMeta());
     }
 
     @Override
-    public String getSpecialName(ItemStack stack)
-    {
-        return EnumHandler.EnumType.values()[stack.getItemDamage()].getName();
+    public int damageDropped(IBlockState state) {
+        return getMetaFromState(state);
     }
 
+    //endregion
+
     @Override
-    public void registerModels()
-    {
-        for(int i = 0; i < EnumHandler.EnumType.values().length; i++)
-        {
-            TolkienMobs.proxy.registerVariantRenderer(Item.getItemFromBlock(this), i, "ore_" + this.dimension + "_" + EnumHandler.EnumType.values()[i].getName(), "inventory");
+    public void registerModels() {
+        for (EnumType type : EnumType.values()) {
+            addName(type.meta, "ore_" + type.name);
+            TolkienMobs.proxy.registerItemRenderer(Item.getItemFromBlock(this), type.meta, "type=" + type.name);
+        }
+    }
+
+    //This does not need to be off in its own helper class. It belongs to this block so it should be in this block's class
+    public enum EnumType implements IStringSerializable {
+        DAEMONIUM(0, "daemonium"),
+        ALUMINIUM(1, "aluminium"),
+        NETHER_DAEMONIUM(2, "nether_daemonium"),
+        NETHER_ALUMINIUM(3, "nether_aluminium"),
+        ENDER_DAEMONIUM(4, "ender_daemonium"),
+        ENDER_ALUMINIUM(5, "ender_aluminium");
+
+        private static final EnumType[] META_LOOKUP = new EnumType[values().length];
+        private final int meta;
+        private final String name;
+
+        EnumType(int meta, String name) {
+            this.meta = meta;
+            this.name = name;
+        }
+
+        public int getMeta() {
+            return meta;
+        }
+
+        public static EnumType byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
+                meta = 0;
+            }
+
+            return META_LOOKUP[meta];
+        }
+
+        @Override
+        public String getName() {
+            return this.name;
+        }
+
+        static {
+            for (EnumType type : values()) {
+                META_LOOKUP[type.getMeta()] = type;
+            }
         }
     }
 }
\ No newline at end of file
diff --git a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockBase.java b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockBase.java
new file mode 100644
index 0000000..91c4edf
--- /dev/null
+++ b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockBase.java
@@ -0,0 +1,40 @@
+package com.greatorator.tolkienmobs.objects.blocks.item;
+
+import com.greatorator.tolkienmobs.objects.blocks.BlockBase;
+import net.minecraft.block.Block;
+import net.minecraft.item.ItemBlock;
+import net.minecraft.item.ItemStack;
+import net.minecraft.util.ResourceLocation;
+
+public class ItemBlockBase extends ItemBlock {
+    private String registryDomain = null;
+
+    public ItemBlockBase(Block block) {
+        super(block);
+    }
+
+    @Override
+    public String getUnlocalizedName(ItemStack stack) {
+        BlockBase base = block instanceof BlockBase ? (BlockBase) block : null;
+
+        if (base != null && base.nameOverrides.containsKey(stack.getItemDamage())) {
+            return "tile." + getRegistryDomain() + ":" + base.nameOverrides.get(stack.getItemDamage());
+        }
+
+        return super.getUnlocalizedName(stack);
+    }
+
+    @Override
+    public int getMetadata(int damage) {
+        return getHasSubtypes() ? damage : 0;
+    }
+
+    public String getRegistryDomain() {
+        if (registryDomain == null) {
+            ResourceLocation regName = getRegistryName();
+            registryDomain = regName == null ? "null" : regName.getResourceDomain();
+        }
+
+        return registryDomain;
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockVariants.java b/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockVariants.java
deleted file mode 100644
index 6943234..0000000
--- a/src/main/java/com/greatorator/tolkienmobs/objects/blocks/item/ItemBlockVariants.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package com.greatorator.tolkienmobs.objects.blocks.item;
-
-import com.greatorator.tolkienmobs.util.interfaces.IMetaName;
-import net.minecraft.block.Block;
-import net.minecraft.item.ItemBlock;
-import net.minecraft.item.ItemStack;
-
-public class ItemBlockVariants extends ItemBlock
-{
-    public ItemBlockVariants(Block block)
-    {
-        super(block);
-        setHasSubtypes(true);
-        setMaxDamage(0);
-    }
-
-    @Override
-    public int getMetadata(int damage)
-    {
-        return damage;
-    }
-
-    @Override
-    public String getUnlocalizedName(ItemStack stack)
-    {
-        return super.getUnlocalizedName() + "_" + ((IMetaName)this.block).getSpecialName(stack);
-    }
-}
\ No newline at end of file
diff --git a/src/main/java/com/greatorator/tolkienmobs/proxy/ClientProxy.java b/src/main/java/com/greatorator/tolkienmobs/proxy/ClientProxy.java
index 266663a..d3d2f1d 100644
--- a/src/main/java/com/greatorator/tolkienmobs/proxy/ClientProxy.java
+++ b/src/main/java/com/greatorator/tolkienmobs/proxy/ClientProxy.java
@@ -1,22 +1,14 @@
 package com.greatorator.tolkienmobs.proxy;
 
-import com.greatorator.tolkienmobs.util.Reference;
 import net.minecraft.block.Block;
 import net.minecraft.client.renderer.block.model.ModelResourceLocation;
 import net.minecraft.item.Item;
-import net.minecraft.util.ResourceLocation;
 import net.minecraftforge.client.model.ModelLoader;
 
 public class ClientProxy extends CommonProxy {
     @Override
-    public void registerItemRenderer(Item item, int meta, String id) {
-        ModelLoader.setCustomModelResourceLocation(item, meta, new ModelResourceLocation(item.getRegistryName(), id));
-    }
-
-    @Override
-    public void registerVariantRenderer(Item item, int meta, String filename, String id) {
-        ModelLoader.setCustomModelResourceLocation(item, meta,
-                new ModelResourceLocation(new ResourceLocation(Reference.MODID, filename), id));
+    public void registerItemRenderer(Item item, int meta, String variant) {
+        ModelLoader.setCustomModelResourceLocation(item, meta, new ModelResourceLocation(item.getRegistryName(), variant));
     }
 
     @Override
diff --git a/src/main/java/com/greatorator/tolkienmobs/proxy/CommonProxy.java b/src/main/java/com/greatorator/tolkienmobs/proxy/CommonProxy.java
index 9713e67..3d66dd6 100644
--- a/src/main/java/com/greatorator/tolkienmobs/proxy/CommonProxy.java
+++ b/src/main/java/com/greatorator/tolkienmobs/proxy/CommonProxy.java
@@ -3,10 +3,7 @@ package com.greatorator.tolkienmobs.proxy;
 import net.minecraft.item.Item;
 
 public class CommonProxy {
-    public void registerItemRenderer(Item item, int meta, String id) {
-    }
-
-    public void registerVariantRenderer(Item item, int meta, String filename, String id) {
+    public void registerItemRenderer(Item item, int meta, String variant) {
     }
 
     public void register(Object o) {
diff --git a/src/main/java/com/greatorator/tolkienmobs/util/handlers/EnumHandler.java b/src/main/java/com/greatorator/tolkienmobs/util/handlers/EnumHandler.java
index 52bbd43..464b6ca 100644
--- a/src/main/java/com/greatorator/tolkienmobs/util/handlers/EnumHandler.java
+++ b/src/main/java/com/greatorator/tolkienmobs/util/handlers/EnumHandler.java
@@ -1,63 +1,67 @@
-package com.greatorator.tolkienmobs.util.handlers;
 
-import net.minecraft.util.IStringSerializable;
+//Ypu dont need and enum handler.
 
-public class EnumHandler
-{
-    public static enum EnumType implements IStringSerializable
-    {
-        DAEMONIUM(0, "daemonium"),
-        ALUMINIUM(1, "aluminium");
 
-        private static final EnumType[] META_LOOKUP = new EnumType[values().length];
-        private final int meta;
-        private final String name, unlocalizedName;
-
-        private EnumType(int meta, String name)
-        {
-            this(meta, name, name);
-        }
-
-        private EnumType(int meta, String name, String unlocalizedName)
-        {
-            this.meta = meta;
-            this.name = name;
-            this.unlocalizedName = unlocalizedName;
-        }
-
-        @Override
-        public String getName()
-        {
-            return this.name;
-        }
-
-        public int getMeta()
-        {
-            return this.meta;
-        }
-
-        public String getUnlocalizedName()
-        {
-            return this.unlocalizedName;
-        }
-
-        @Override
-        public String toString()
-        {
-            return this.name;
-        }
-
-        public static EnumType byMetadata(int meta)
-        {
-            return META_LOOKUP[meta];
-        }
-
-        static
-        {
-            for(EnumType enumtype : values())
-            {
-                META_LOOKUP[enumtype.getMeta()] = enumtype;
-            }
-        }
-    }
-}
\ No newline at end of file
+//package com.greatorator.tolkienmobs.util.handlers;
+//
+//import net.minecraft.util.IStringSerializable;
+//
+//public class EnumHandler
+//{
+//    public static enum EnumType implements IStringSerializable
+//    {
+//        DAEMONIUM(0, "daemonium"),
+//        ALUMINIUM(1, "aluminium");
+//
+//        private static final EnumType[] META_LOOKUP = new EnumType[values().length];
+//        private final int meta;
+//        private final String name, unlocalizedName;
+//
+//        private EnumType(int meta, String name)
+//        {
+//            this(meta, name, name);
+//        }
+//
+//        private EnumType(int meta, String name, String unlocalizedName)
+//        {
+//            this.meta = meta;
+//            this.name = name;
+//            this.unlocalizedName = unlocalizedName;
+//        }
+//
+//        @Override
+//        public String getName()
+//        {
+//            return this.name;
+//        }
+//
+//        public int getMeta()
+//        {
+//            return this.meta;
+//        }
+//
+//        public String getUnlocalizedName()
+//        {
+//            return this.unlocalizedName;
+//        }
+//
+//        @Override
+//        public String toString()
+//        {
+//            return this.name;
+//        }
+//
+//        public static EnumType byMetadata(int meta)
+//        {
+//            return META_LOOKUP[meta];
+//        }
+//
+//        static
+//        {
+//            for(EnumType enumtype : values())
+//            {
+//                META_LOOKUP[enumtype.getMeta()] = enumtype;
+//            }
+//        }
+//    }
+//}
\ No newline at end of file
diff --git a/src/main/java/com/greatorator/tolkienmobs/util/interfaces/IMetaName.java b/src/main/java/com/greatorator/tolkienmobs/util/interfaces/IMetaName.java
index cc076dc..78d3cbd 100644
--- a/src/main/java/com/greatorator/tolkienmobs/util/interfaces/IMetaName.java
+++ b/src/main/java/com/greatorator/tolkienmobs/util/interfaces/IMetaName.java
@@ -2,6 +2,7 @@ package com.greatorator.tolkienmobs.util.interfaces;
 
 import net.minecraft.item.ItemStack;
 
+@Deprecated //Not Needed
 public interface IMetaName
 {
     public String getSpecialName(ItemStack stack);
diff --git a/src/main/java/com/greatorator/tolkienmobs/world/gen/WorldGenCustomOres.java b/src/main/java/com/greatorator/tolkienmobs/world/gen/WorldGenCustomOres.java
index e111d01..af8aab5 100644
--- a/src/main/java/com/greatorator/tolkienmobs/world/gen/WorldGenCustomOres.java
+++ b/src/main/java/com/greatorator/tolkienmobs/world/gen/WorldGenCustomOres.java
@@ -2,7 +2,6 @@ package com.greatorator.tolkienmobs.world.gen;
 
 import com.greatorator.tolkienmobs.init.BlockInit;
 import com.greatorator.tolkienmobs.objects.blocks.BlockOres;
-import com.greatorator.tolkienmobs.util.handlers.EnumHandler;
 import net.minecraft.block.state.pattern.BlockMatcher;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.math.BlockPos;
@@ -22,13 +21,13 @@ public class WorldGenCustomOres implements IWorldGenerator
 
     public WorldGenCustomOres()
     {
-        ore_nether_daemonium = new WorldGenMinable(BlockInit.ORE_NETHER.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.NETHERRACK));
-        ore_overworld_daemonium = new WorldGenMinable(BlockInit.ORE_OVERWORLD.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.STONE));
-        ore_end_daemonium = new WorldGenMinable(BlockInit.ORE_END.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.END_STONE));
+        ore_nether_daemonium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.NETHER_DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.NETHERRACK));
+        ore_overworld_daemonium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.STONE));
+        ore_end_daemonium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.ENDER_DAEMONIUM), 9, BlockMatcher.forBlock(Blocks.END_STONE));
 
-        ore_nether_aluminium = new WorldGenMinable(BlockInit.ORE_NETHER.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.NETHERRACK));
-        ore_overworld_aluminium = new WorldGenMinable(BlockInit.ORE_OVERWORLD.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.STONE));
-        ore_end_aluminium = new WorldGenMinable(BlockInit.ORE_END.getDefaultState().withProperty(BlockOres.VARIANT, EnumHandler.EnumType.ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.END_STONE));
+        ore_nether_aluminium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.NETHER_ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.NETHERRACK));
+        ore_overworld_aluminium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.STONE));
+        ore_end_aluminium = new WorldGenMinable(BlockInit.ORE.getDefaultState().withProperty(BlockOres.ORE_TYPE, BlockOres.EnumType.ENDER_ALUMINIUM), 9, BlockMatcher.forBlock(Blocks.END_STONE));
     }
 
     @Override
diff --git a/src/main/resources/assets/tolkienmobs/blockstates/ore.json b/src/main/resources/assets/tolkienmobs/blockstates/ore.json
new file mode 100644
index 0000000..5571bc6
--- /dev/null
+++ b/src/main/resources/assets/tolkienmobs/blockstates/ore.json
@@ -0,0 +1,17 @@
+{
+  "forge_marker": 1,
+  "defaults": {
+    "model": "minecraft:cube_all",
+    "transform": "forge:default-block"
+  },
+  "variants": {
+    "type": {
+      "daemonium":  { "textures": {"all":  "tolkienmobs:blocks/ore_daemonium"} },
+      "aluminium": { "textures": {"all":  "tolkienmobs:blocks/ore_aluminium"} },
+      "nether_daemonium":  { "textures": {"all":  "tolkienmobs:blocks/ore_nether_daemonium"} },
+      "nether_aluminium": { "textures": {"all":  "tolkienmobs:blocks/ore_nether_aluminium"} },
+      "ender_daemonium":  { "textures": {"all":  "tolkienmobs:blocks/ore_ender_daemonium"} },
+      "ender_aluminium": { "textures": {"all":  "tolkienmobs:blocks/ore_ender_aluminium"} }
+    }
+  }
+}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/blockstates/ore_end.json b/src/main/resources/assets/tolkienmobs/blockstates/ore_end.json
deleted file mode 100644
index 4040094..0000000
--- a/src/main/resources/assets/tolkienmobs/blockstates/ore_end.json
+++ /dev/null
@@ -1,7 +0,0 @@
-{
-  "variants":
-  {
-    "variant=aluminium": { "model": "tolkienmobs:ore_end_aluminium" },
-    "variant=daemonium": { "model": "tolkienmobs:ore_end_daemonium" }
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/blockstates/ore_nether.json b/src/main/resources/assets/tolkienmobs/blockstates/ore_nether.json
deleted file mode 100644
index 2723b3b..0000000
--- a/src/main/resources/assets/tolkienmobs/blockstates/ore_nether.json
+++ /dev/null
@@ -1,7 +0,0 @@
-{
-  "variants":
-  {
-    "variant=aluminium": { "model": "tolkienmobs:ore_nether_aluminium" },
-    "variant=daemonium": { "model": "tolkienmobs:ore_nether_daemonium" }
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/blockstates/ore_overworld.json b/src/main/resources/assets/tolkienmobs/blockstates/ore_overworld.json
deleted file mode 100644
index cdc8eba..0000000
--- a/src/main/resources/assets/tolkienmobs/blockstates/ore_overworld.json
+++ /dev/null
@@ -1,7 +0,0 @@
-{
-  "variants":
-  {
-    "variant=aluminium": { "model": "tolkienmobs:ore_overworld_aluminium" },
-    "variant=daemonium": { "model": "tolkienmobs:ore_overworld_daemonium" }
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/lang/en_us.lang b/src/main/resources/assets/tolkienmobs/lang/en_us.lang
index 9c0d7c5..8b9c58c 100644
--- a/src/main/resources/assets/tolkienmobs/lang/en_us.lang
+++ b/src/main/resources/assets/tolkienmobs/lang/en_us.lang
@@ -22,9 +22,9 @@ item.tolkienmobs:boots_daemonium.name=Daemonium Boots
 //Tile Information
 
 tile.tolkienmobs:block_daemonium.name=Daemonium Block
-tile.tolkienmobs:ore_overworld_daemonium.name=Daemonium Ore
+tile.tolkienmobs:ore_daemonium.name=Daemonium Ore
 tile.tolkienmobs:ore_nether_daemonium.name=Fiery Daemonium Ore
-tile.tolkienmobs:ore_end_daemonium.name=Ender Daemonium Ore
-tile.tolkienmobs:ore_overworld_aluminium.name=Aluminium Ore
+tile.tolkienmobs:ore_ender_daemonium.name=Ender Daemonium Ore
+tile.tolkienmobs:ore_aluminium.name=Aluminium Ore
 tile.tolkienmobs:ore_nether_aluminium.name=Fiery Aluminium Ore
-tile.tolkienmobs:ore_end_aluminium.name=Ender Aluminium Ore
\ No newline at end of file
+tile.tolkienmobs:ore_ender_aluminium.name=Ender Aluminium Ore
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_end_aluminium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_end_aluminium.json
deleted file mode 100644
index c93fa00..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_end_aluminium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-    "parent": "block/cube_all",
-    "textures": {
-        "all": "tolkienmobs:blocks/ore_end_aluminium"
-    }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_end_daemonium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_end_daemonium.json
deleted file mode 100644
index 5a550c1..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_end_daemonium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-  "parent": "block/cube_all",
-  "textures": {
-    "all": "tolkienmobs:blocks/ore_end_daemonium"
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_nether_aluminium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_nether_aluminium.json
deleted file mode 100644
index 3cc8a32..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_nether_aluminium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-    "parent": "block/cube_all",
-    "textures": {
-        "all": "tolkienmobs:blocks/ore_nether_aluminium"
-    }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_nether_daemonium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_nether_daemonium.json
deleted file mode 100644
index 29695af..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_nether_daemonium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-  "parent": "block/cube_all",
-  "textures": {
-    "all": "tolkienmobs:blocks/ore_nether_daemonium"
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_aluminium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_aluminium.json
deleted file mode 100644
index 77d2efa..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_aluminium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-    "parent": "block/cube_all",
-    "textures": {
-        "all": "tolkienmobs:blocks/ore_overworld_aluminium"
-    }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_daemonium.json b/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_daemonium.json
deleted file mode 100644
index d68deb8..0000000
--- a/src/main/resources/assets/tolkienmobs/models/block/ore_overworld_daemonium.json
+++ /dev/null
@@ -1,6 +0,0 @@
-{
-  "parent": "block/cube_all",
-  "textures": {
-    "all": "tolkienmobs:blocks/ore_overworld_daemonium"
-  }
-}
\ No newline at end of file
diff --git a/src/main/resources/assets/tolkienmobs/textures/blocks/ore_overworld_aluminium.png b/src/main/resources/assets/tolkienmobs/textures/blocks/ore_aluminium.png
similarity index 100%
rename from src/main/resources/assets/tolkienmobs/textures/blocks/ore_overworld_aluminium.png
rename to src/main/resources/assets/tolkienmobs/textures/blocks/ore_aluminium.png
diff --git a/src/main/resources/assets/tolkienmobs/textures/blocks/ore_overworld_daemonium.png b/src/main/resources/assets/tolkienmobs/textures/blocks/ore_daemonium.png
similarity index 100%
rename from src/main/resources/assets/tolkienmobs/textures/blocks/ore_overworld_daemonium.png
rename to src/main/resources/assets/tolkienmobs/textures/blocks/ore_daemonium.png
diff --git a/src/main/resources/assets/tolkienmobs/textures/blocks/ore_end_aluminium.png b/src/main/resources/assets/tolkienmobs/textures/blocks/ore_ender_aluminium.png
similarity index 100%
rename from src/main/resources/assets/tolkienmobs/textures/blocks/ore_end_aluminium.png
rename to src/main/resources/assets/tolkienmobs/textures/blocks/ore_ender_aluminium.png
diff --git a/src/main/resources/assets/tolkienmobs/textures/blocks/ore_end_daemonium.png b/src/main/resources/assets/tolkienmobs/textures/blocks/ore_ender_daemonium.png
similarity index 100%
rename from src/main/resources/assets/tolkienmobs/textures/blocks/ore_end_daemonium.png
rename to src/main/resources/assets/tolkienmobs/textures/blocks/ore_ender_daemonium.png
