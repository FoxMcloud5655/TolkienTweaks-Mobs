//package com.greatorator.tolkienmobs.world.world_old.gen.generators;
//
//import com.greatorator.tolkienmobs.entity.passive.EntityTMHobbit;
//import com.greatorator.tolkienmobs.handler.handler_old.interfaces.ITTMStructure;
//import com.greatorator.tolkienmobs.handler.handler_old.interfaces.ITTMStructureSummon;
//import net.minecraft.block.*;
//import net.minecraft.block.state.IBlockState;
//import net.minecraft.init.Blocks;
//import net.minecraft.item.EnumDyeColor;
//import net.minecraft.util.EnumFacing;
//import net.minecraft.util.math.BlockPos;
//import net.minecraft.world.World;
//import net.minecraft.world.gen.feature.WorldGenerator;
//
//import java.util.Random;
//
//public class WorldGenBiomeHobbitHouse extends WorldGenerator implements ITTMStructure, ITTMStructureSummon {
//    public static final WorldGenBiomeHobbitHouse INSTANCE = new WorldGenBiomeHobbitHouse();
//
//    public WorldGenBiomeHobbitHouse() {
//    }
//
//    public WorldGenBiomeHobbitHouse(boolean b, int u, int i, int a, Boolean f){
//        super(b);
//    }
//
//    @Override
//    public boolean generate(World worldIn, Random r, BlockPos bp) {
//        //Change k, i, or j to offset the structure
//        int k = 0;
//        int i = 0;
//        int j = 0;
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 0, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 0, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 0, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 1, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 1, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 0, j + 1, k + 8), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 0, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 4), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 5), Blocks.RED_FLOWER.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 6), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 0, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 2), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 3), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 4), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 6), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 0, k + 10), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 1), Blocks.RED_FLOWER.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 2), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 4), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 5), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 6), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 7), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 3), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 4), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 8), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 9), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 6), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 1), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 4), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 5), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 6), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 7), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 8), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 0, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 4), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 5), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 6), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 7), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 9), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 10), Blocks.OAK_FENCE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 1), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 9), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 2), (IBlockState)Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 4), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 5), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 6), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 7), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 5), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 6), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 7), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 8), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 1), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 4), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 5), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 6), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 7), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 8), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 0, k + 10), Blocks.GRASS_PATH.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 0), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 6), (IBlockState)Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.BLUE));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 1), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 2), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 8), Blocks.GLASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 1), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 2), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 2), (IBlockState)Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 4), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 5), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 6), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 7), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 6), Blocks.RED_FLOWER.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 8), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 1), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 4), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 5), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 6), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 7), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 8), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 9), Blocks.GRASS_PATH.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 0, k + 10), Blocks.GRASS_PATH.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 6), (IBlockState)Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.BLUE));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 8), Blocks.SPRUCE_DOOR.getDefaultState().withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.LOWER).withProperty(BlockDoor.FACING, EnumFacing.SOUTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 3), Blocks.GLASS_PANE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 8), Blocks.SPRUCE_DOOR.getDefaultState().withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.UPPER).withProperty(BlockDoor.FACING, EnumFacing.SOUTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 2), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 4), Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING,EnumFacing.SOUTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 7), Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING,EnumFacing.NORTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 8), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 9), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 2), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 4), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 5), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 6), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 7), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 8), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 3), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 8), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 1), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 4), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 5), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 6), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 7), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 8), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 0, k + 10), Blocks.GRASS_PATH.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 6), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 7), Blocks.OAK_FENCE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 2), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 7), Blocks.WOODEN_PRESSURE_PLATE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 8), Blocks.GLASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 2), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 4), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 5), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 6), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 7), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 3), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 5), Blocks.RED_FLOWER.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 6), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 8), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 1), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 4), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 5), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 6), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 7), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 8), Blocks.COBBLESTONE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 0, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 4), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 5), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 6), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 7), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 9), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 10), Blocks.OAK_FENCE.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 4), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 5), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 6), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 7), Blocks.AIR.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 9), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 2), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 3), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 4), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 5), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 6), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 7), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 9), (IBlockState)Blocks.OAK_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.WEST));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 2), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 5), (IBlockState)Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 3), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 4), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 0), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 2), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 0, k + 10), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 1), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 4), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 5), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 6), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 7), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 8), (IBlockState)Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 3), (IBlockState)Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.OAK));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 9), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 4, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 4, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 4, k + 7), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 4, k + 8), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 5, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 1), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 2), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 3), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 9), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 0, k + 10), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 8), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 10), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 9), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 3, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 3, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 3, k + 7), Blocks.YELLOW_FLOWER.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 3, k + 8), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 4, k + 5), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 4, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 3), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 4), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 0, k + 9), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 7), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 8), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 1, k + 9), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 2, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 2, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 11, j + 3, k + 7), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 0, k + 4), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 0, k + 5), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 0, k + 6), Blocks.DIRT.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 0, k + 7), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 0, k + 8), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 1, k + 5), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 1, k + 6), Blocks.GRASS.getDefaultState());
//        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 12, j + 1, k + 7), (IBlockState)Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
//
//        spawnHobbit(worldIn, bp);
//        spawnHobbit(worldIn, bp);
//        return true;
//    }
//
//    private void spawnHobbit (World worldIn, BlockPos bp){
//        BlockPos pos = bp.add(5, 2, 6);
//
//        EntityTMHobbit hobbit = new EntityTMHobbit(worldIn);
//        hobbit.setLocationAndAngles(pos.getX(),pos.getY(),pos.getZ(), 0F, 0F);
//        hobbit.onInitialSpawn(worldIn.getDifficultyForLocation(pos), null);
//        hobbit.enablePersistence();
//        worldIn.spawnEntity(hobbit);
//    }
//}
