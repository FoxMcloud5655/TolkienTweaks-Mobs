package com.greatorator.tolkienmobs.world.gen.generators;

import com.brandon3055.tolkientweaks.TTFeatures;
import com.greatorator.tolkienmobs.block.BlockSigns;
import com.greatorator.tolkienmobs.block.itemblock.BlockTMFireplace;
import com.greatorator.tolkienmobs.handler.interfaces.ITTMStructure;
import com.greatorator.tolkienmobs.handler.interfaces.ITTMStructureSummon;
import com.greatorator.tolkienmobs.init.LootInit;
import com.greatorator.tolkienmobs.init.TTMFeatures;
import net.minecraft.block.*;
import net.minecraft.block.state.IBlockState;
import net.minecraft.init.Blocks;
import net.minecraft.item.EnumDyeColor;
import net.minecraft.tileentity.TileEntityChest;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.gen.feature.WorldGenerator;

import java.util.Random;

public class WorldGenBiomeHobbitGrocer extends WorldGenerator implements ITTMStructure, ITTMStructureSummon {
    public static final WorldGenBiomeHobbitGrocer INSTANCE = new WorldGenBiomeHobbitGrocer();

    public WorldGenBiomeHobbitGrocer() {
    }

    public WorldGenBiomeHobbitGrocer(boolean b, int u, int i, int a, Boolean f){
        super(b);
    }

    @Override
    public boolean generate(World worldIn, Random r, BlockPos bp) {
        /* Change k, i, or j to offset the structure */
        int i = 0;
        int j = -1;
        int k = 0;
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 6), Blocks.GRASS_PATH.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 7), Blocks.GRASS_PATH.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 8), Blocks.GRASS_PATH.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 1, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 2, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 2, k + 5), Blocks.JUNGLE_FENCE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 2, k + 9), Blocks.JUNGLE_FENCE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 2, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 2, k + 11), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 3, k + 4), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i, j + 4, k + 4), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 7), Blocks.GRASS_PATH.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 1, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 5), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 6), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 8), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 9), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 2, k + 12), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 5), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 9), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 3, k + 11), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 6), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 7), TTMFeatures.SIGNS.getDefaultState().withProperty(BlockSigns.FACING, EnumFacing.WEST).withProperty(BlockSigns.VARIANT, BlockSigns.EnumType.GROCER).withProperty(BlockSigns.WALL,false));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 8), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 4, k + 10), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 5, k + 4), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 5, k + 6), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 5, k + 7), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 1, j + 5, k + 8), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 1), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 5), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 6), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 7), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 8), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 9), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 1, k + 13), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 1), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 7), Blocks.SPRUCE_DOOR.getDefaultState().withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.LOWER).withProperty(BlockDoor.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 9), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 2, k + 12), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 4), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 6), Blocks.GLASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 7), Blocks.SPRUCE_DOOR.getDefaultState().withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.UPPER).withProperty(BlockDoor.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 8), Blocks.GLASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 9), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 3, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 7), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 9), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 4, k + 11), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 4), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 7), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 5, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 6, k + 5), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 6, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 6, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 6, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 7, k + 6), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 7, k + 7), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 2, j + 7, k + 8), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 1), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 13), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 1, k + 14), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 6), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 7), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 8), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 2, k + 13), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 4), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 5), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 9), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 3, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 2), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 7), Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING,EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 11), Blocks.YELLOW_FLOWER.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 4, k + 12), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 3), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 5), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 5, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 6, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 6, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 6, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 6, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 7, k + 6), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 7, k + 7), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 3, j + 7, k + 8), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 1), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 13), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 1, k + 14), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 1), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 6), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 7), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 8), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 2, k + 13), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 4), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 5), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 9), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 3, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 2), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.EAST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 4, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 3), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 5), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 5, k + 11), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 4), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 6, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 7, k + 6), Blocks.RED_FLOWER.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 7, k + 7), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 4, j + 7, k + 8), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 1), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 7), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 8), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 9), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 13), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 1, k + 14), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 1), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 6), Blocks.CARPET.getDefaultState().withProperty(BlockColored.COLOR, EnumDyeColor.YELLOW));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 2, k + 13), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 2), Blocks.RED_FLOWER.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 4), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 5), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 9), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 3, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 9), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 4, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 3), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 5), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 9), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 5, k + 11), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 4), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 6, k + 10), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 7, k + 7), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 5, j + 7, k + 8), Blocks.RED_FLOWER.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 1), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 2), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 7), Blocks.COBBLESTONE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 12), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 1, k + 13), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 8), TTMFeatures.BLOCK_TMFIREPLACE.getDefaultState().withProperty(BlockTMFireplace.FACING,EnumFacing.WEST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 2, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 2), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 4), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 5), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 7), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 8), Blocks.STONE_SLAB.getDefaultState().withProperty(BlockStoneSlab.VARIANT, BlockStoneSlab.EnumType.BRICK));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 10), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 3, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 3), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 5), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 6), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 7), Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING,EnumFacing.WEST));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 8), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 9), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 4, k + 10), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 4), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 6), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 7), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 8), Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 5, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 6, k + 9), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 6, j + 8, k + 5), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 2), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 3), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 6), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 7), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 8), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 11), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 1, k + 12), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 8), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 2, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 3), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 7), Blocks.GLASS_PANE.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 8), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 3, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 5), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 6), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 7), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 8), Blocks.PLANKS.getDefaultState().withProperty(BlockPlanks.VARIANT, BlockPlanks.EnumType.SPRUCE));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 4, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 5, k + 9), Blocks.BRICK_BLOCK.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 7), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 8), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 6, k + 9), TTFeatures.smoker.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 7, j + 8, k + 9), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 3), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 4), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 6), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 7), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 8), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 10), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 1, k + 11), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 3), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 2, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 4), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 6), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 8), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 3, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 5), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 6), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.SOUTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 7), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 8), Blocks.SPRUCE_STAIRS.getDefaultState().withProperty(BlockStairs.FACING, EnumFacing.NORTH));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 4, k + 9), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 7), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 5, k + 9), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 8, j + 8, k + 10), Blocks.AIR.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 4), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 5), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 6), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 7), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 8), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 9), Blocks.DIRT.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 1, k + 10), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 4), Blocks.RED_FLOWER.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 2, k + 10), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 5), Blocks.TALLGRASS.getDefaultState().withProperty(BlockTallGrass.TYPE, BlockTallGrass.EnumType.GRASS));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 3, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 9, j + 4, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 5), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 6), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 7), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 8), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 1, k + 9), Blocks.GRASS.getDefaultState());
        this.setBlockAndNotifyAdequately(worldIn, bp.add(i + 10, j + 2, k + 6), Blocks.LEAVES.getDefaultState().withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false)));

        getLoot(worldIn, r, bp);

        return true;
    }

    private void getLoot(World worldIn, Random r, BlockPos bp) {

        BlockPos[] posses = new BlockPos[] {new BlockPos(6, 1, 6)};

        for (BlockPos pos : posses) {

            IBlockState chest = Blocks.CHEST.getDefaultState();
            BlockPos actualPos = bp.add(pos);
            worldIn.setBlockState(actualPos, chest, 2);
            TileEntityChest tileEntityChest = (TileEntityChest) worldIn.getTileEntity(actualPos);
            ResourceLocation lootType = r.nextInt(3) == 0 ? LootInit.HOBBIT_GROCER : LootInit.HOBBIT_HOUSE;

            if (tileEntityChest != null)
            {
                tileEntityChest.setLootTable(lootType, r.nextLong());
            }
        }
    }
}
